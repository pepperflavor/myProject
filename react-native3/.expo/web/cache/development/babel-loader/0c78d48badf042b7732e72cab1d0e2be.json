{"ast":null,"code":"import Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction CategoryGridTile(_ref) {\n  var title = _ref.title,\n    color = _ref.color;\n  return _jsx(View, {\n    style: [styles.gridItem, {\n      backgroundColor: color\n    }],\n    children: _jsx(Pressable, {\n      android_ripple: {\n        color: \"#ccc\"\n      },\n      style: function style(_ref2) {\n        var pressed = _ref2.pressed;\n        return [styles.button, pressed && styles.buttonPressed];\n      },\n      children: _jsx(View, {\n        style: styles.innerContainer,\n        children: _jsx(Text, {\n          style: styles.itemText,\n          children: title\n        })\n      })\n    })\n  });\n}\nexport default CategoryGridTile;\nvar styles = StyleSheet.create({\n  gridItem: {\n    flex: 1,\n    margin: 16,\n    height: 150,\n    borderRadius: 8,\n    elevation: 4,\n    backgroundColor: \"white\",\n    shadowColor: \"black\",\n    shadowOpacity: 0.25,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 8,\n    overflow: Platform.OS === \"android\" ? \"hidden\" : \"visible\"\n  },\n\n  button: {\n    flex: 1\n  },\n  buttonPressed: {\n    opacity: 0.5,\n    backgroundColor: 'white'\n  },\n  innerContainer: {\n    flex: 1,\n    padding: 16,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  itemText: {\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["CategoryGridTile","title","color","styles","gridItem","backgroundColor","pressed","button","buttonPressed","innerContainer","itemText","StyleSheet","create","flex","margin","height","borderRadius","elevation","shadowColor","shadowOpacity","shadowOffset","width","shadowRadius","overflow","Platform","OS","opacity","padding","justifyContent","alignItems","fontWeight"],"sources":["C:/Users/KGA_/Desktop/myProject/react-native3/components/CategoryGridTile.js"],"sourcesContent":["import { Pressable, View, Text, StyleSheet, Platform } from \"react-native\";\r\n\r\n// CATEGORIES[] 안에 색코드와 국가명을 뽑아와야하기 때문에\r\nfunction CategoryGridTile({title, color}){\r\n    return (\r\n      <View style={[styles.gridItem, { backgroundColor: color }]}>\r\n        <Pressable\r\n          android_ripple={{ color: \"#ccc\" }}\r\n          style={({ pressed }) => [\r\n            styles.button,\r\n            pressed && styles.buttonPressed,\r\n          ]}\r\n        >\r\n          <View style={styles.innerContainer}>\r\n            <Text style={styles.itemText}>{title}</Text>\r\n          </View>\r\n        </Pressable>\r\n      </View>\r\n    );\r\n}\r\nexport default CategoryGridTile;\r\n\r\nconst styles = StyleSheet.create({\r\n  gridItem: {\r\n    flex: 1,\r\n    margin: 16,\r\n    height: 150,\r\n    borderRadius: 8,\r\n    elevation: 4,\r\n    backgroundColor: \"white\",\r\n    shadowColor: \"black\", // ios에서 그림자 만들어주는 옵션\r\n    shadowOpacity: 0.25,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowRadius: 8,\r\n    overflow: Platform.OS === \"android\" ? \"hidden\" : \"visible\", // 현재 OS를 나타내는 문자열 값을 반환함\r\n  },\r\n  button: {\r\n    flex: 1,\r\n  },\r\n  buttonPressed: {\r\n    opacity: 0.5,\r\n    backgroundColor : 'white'\r\n  },\r\n  innerContainer: {\r\n    flex: 1,\r\n    padding: 16,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  itemText : {\r\n    fontWeight : 'bold'\r\n\r\n  }\r\n});"],"mappings":";;;;;;AAGA,SAASA,gBAAgB,OAAgB;EAAA,IAAdC,KAAK,QAALA,KAAK;IAAEC,KAAK,QAALA,KAAK;EACnC,OACE,KAAC,IAAI;IAAC,KAAK,EAAE,CAACC,MAAM,CAACC,QAAQ,EAAE;MAAEC,eAAe,EAAEH;IAAM,CAAC,CAAE;IAAA,UACzD,KAAC,SAAS;MACR,cAAc,EAAE;QAAEA,KAAK,EAAE;MAAO,CAAE;MAClC,KAAK,EAAE;QAAA,IAAGI,OAAO,SAAPA,OAAO;QAAA,OAAO,CACtBH,MAAM,CAACI,MAAM,EACbD,OAAO,IAAIH,MAAM,CAACK,aAAa,CAChC;MAAA,CAAC;MAAA,UAEF,KAAC,IAAI;QAAC,KAAK,EAAEL,MAAM,CAACM,cAAe;QAAA,UACjC,KAAC,IAAI;UAAC,KAAK,EAAEN,MAAM,CAACO,QAAS;UAAA,UAAET;QAAK;MAAQ;IACvC;EACG,EACP;AAEb;AACA,eAAeD,gBAAgB;AAE/B,IAAMG,MAAM,GAAGQ,UAAU,CAACC,MAAM,CAAC;EAC/BR,QAAQ,EAAE;IACRS,IAAI,EAAE,CAAC;IACPC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,GAAG;IACXC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE,CAAC;IACZZ,eAAe,EAAE,OAAO;IACxBa,WAAW,EAAE,OAAO;IACpBC,aAAa,EAAE,IAAI;IACnBC,YAAY,EAAE;MAAEC,KAAK,EAAE,CAAC;MAAEN,MAAM,EAAE;IAAE,CAAC;IACrCO,YAAY,EAAE,CAAC;IACfC,QAAQ,EAAEC,QAAQ,CAACC,EAAE,KAAK,SAAS,GAAG,QAAQ,GAAG;EACnD,CAAC;;EACDlB,MAAM,EAAE;IACNM,IAAI,EAAE;EACR,CAAC;EACDL,aAAa,EAAE;IACbkB,OAAO,EAAE,GAAG;IACZrB,eAAe,EAAG;EACpB,CAAC;EACDI,cAAc,EAAE;IACdI,IAAI,EAAE,CAAC;IACPc,OAAO,EAAE,EAAE;IACXC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDnB,QAAQ,EAAG;IACToB,UAAU,EAAG;EAEf;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}